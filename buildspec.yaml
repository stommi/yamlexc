AWSTemplateFormatVersion: 2010-09-09
Description: Academy Demo CloudFormation

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: tommikonetiistai
      BlockDeviceMappings:
        - DeviceName: /dev/sdm
          Ebs:
            VolumeType: io1
            Iops: 200
            DeleteOnTermination: false
            VolumeSize: 20
      SecurityGroupIds:
        - !Ref SgForEC2

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
        - "eu-west-3a"
      Instances: [!Ref MyEC2Instance]
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      LoadBalancerName: tommitestilb
      SecurityGroups:
        - !Ref SGForLB

  SgForEC2:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: vpc-4c243025
      GroupDescription: Sample source security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref SGForLB

  SGForLB:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: vpc-4c243025
      GroupDescription: Sample source security group

#  MyEIP:
#    Type: AWS::EC2::EIP
#    Properties:
#      InstanceId: !Ref MyEC2Instance

  MyQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: Tommi-que

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead

Outputs:
  MyLoadBalancerDNSName:
    Description: The DNSName of the load balancer
    Value: !GetAtt MyLoadBalancer.DNSName